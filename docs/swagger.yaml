definitions:
  models.Article:
    properties:
      authorID:
        type: string
      body:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: string
      title:
        type: string
      updatedAt:
        type: string
    type: object
  models.ArticleCreate:
    properties:
      authorID:
        type: string
      body:
        type: string
      title:
        type: string
    type: object
  models.ArticleUpdate:
    properties:
      body:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  models.Author:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      firstname:
        type: string
      id:
        type: string
      lastname:
        type: string
      updatedAt:
        type: string
    type: object
  models.AuthorCreate:
    properties:
      firstname:
        type: string
      lastname:
        type: string
    type: object
  models.AuthorUpdate:
    properties:
      firstname:
        type: string
      id:
        type: string
      lastname:
        type: string
    type: object
  models.JSONErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.JSONResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
  models.PackedArticleModel:
    properties:
      author:
        $ref: '#/definitions/models.Author'
      body:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: string
      title:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact: {}
paths:
  /article:
    get:
      consumes:
      - application/json
      description: get article
      parameters:
      - description: "0"
        in: query
        name: offset
        type: integer
      - description: "10"
        in: query
        name: limit
        type: integer
      - description: smth
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Article'
                  type: array
              type: object
      summary: List article
      tags:
      - article
    post:
      consumes:
      - application/json
      description: create article
      parameters:
      - description: article body
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/models.ArticleCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Article'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.JSONErrorResponse'
      summary: Create article
      tags:
      - article
    put:
      consumes:
      - application/json
      description: update article
      parameters:
      - description: article body
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/models.ArticleUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Article'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.JSONErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.JSONErrorResponse'
      summary: Update article
      tags:
      - article
  /article/{id}:
    delete:
      consumes:
      - application/json
      description: delete article by id
      parameters:
      - description: article id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.PackedArticleModel'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.JSONErrorResponse'
      summary: Delete article by id
      tags:
      - article
    get:
      consumes:
      - application/json
      description: get article by id
      parameters:
      - description: article id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.PackedArticleModel'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.JSONErrorResponse'
      summary: get article by id
      tags:
      - article
  /author:
    get:
      consumes:
      - application/json
      description: get author
      parameters:
      - description: "0"
        in: query
        name: offset
        type: integer
      - description: "10"
        in: query
        name: limit
        type: integer
      - description: smth
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Author'
                  type: array
              type: object
      summary: List author
      tags:
      - author
    post:
      consumes:
      - application/json
      description: create author
      parameters:
      - description: author body
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/models.AuthorCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Author'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.JSONErrorResponse'
      summary: Create author
      tags:
      - author
    put:
      consumes:
      - application/json
      description: update author
      parameters:
      - description: author body
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/models.AuthorUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Author'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.JSONErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.JSONErrorResponse'
      summary: Update author
      tags:
      - author
  /author/{id}:
    delete:
      consumes:
      - application/json
      description: delete author by id
      parameters:
      - description: author id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Author'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.JSONErrorResponse'
      summary: Delete author by id
      tags:
      - author
    get:
      consumes:
      - application/json
      description: get author by id
      parameters:
      - description: author id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Author'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.JSONErrorResponse'
      summary: get author by id
      tags:
      - author
swagger: "2.0"
